import 'package:app_base_flutter/core/enum.dart';
import 'package:app_base_flutter/core/widget/global/button/wid_button_elevated.dart';
import 'package:app_base_flutter/core/widget/global/button/wid_button_static.dart';
import 'package:flutter/material.dart';

class DefaultPrimaryButton extends AppElevatedButton {
  const DefaultPrimaryButton({
    Key? key,
    double? width,
    double height = 50,
    double chipsHeight = 30,
    double? borderRadius,
    dynamic text,
    ButtonSize buttonSize = ButtonSize.full,
    ButtonRound buttonRound = ButtonRound.cornered,
    bool disable = false,
    Widget? child,
    Color? backgroundColor,
    Color? foregroundColor,
    Color? disabledBackgroundColor,
    Color? disabledForegroundColor,
    Color? borderColor,
    VoidCallback? onPressed,
  }) : super(
            key: key,
            width: width,
            height: height,
            chipsHeight: chipsHeight,
            borderRadius: borderRadius,
            text: text,
            disabled: disable,
            onPressed: onPressed,
            buttonType: ButtonType.primary,
            buttonSize: buttonSize,
            buttonRound: buttonRound,
            child: child,
            backgroundColor: backgroundColor,
            foregroundColor: foregroundColor,
            disabledBackgroundColor: disabledBackgroundColor,
            disabledForegroundColor: disabledForegroundColor,
            borderColor: borderColor);
}

class DefaultSecondaryButton extends AppElevatedButton {
  const DefaultSecondaryButton({
    Key? key,
    double? width,
    double height = 50,
    double chipsHeight = 30,
    double? borderRadius,
    dynamic text,
    ButtonSize buttonSize = ButtonSize.full,
    ButtonRound buttonRound = ButtonRound.cornered,
    bool disable = false,
    Widget? child,
    Color? backgroundColor,
    Color? foregroundColor,
    Color? disabledBackgroundColor,
    Color? disabledForegroundColor,
    Color? borderColor,
    VoidCallback? onPressed,
  }) : super(
            key: key,
            width: width,
            height: height,
            chipsHeight: chipsHeight,
            borderRadius: borderRadius,
            text: text,
            disabled: disable,
            onPressed: onPressed,
            buttonType: ButtonType.secondary,
            buttonSize: buttonSize,
            buttonRound: buttonRound,
            child: child,
            backgroundColor: backgroundColor,
            foregroundColor: foregroundColor,
            disabledBackgroundColor: disabledBackgroundColor,
            disabledForegroundColor: disabledForegroundColor,
            borderColor: borderColor);
}

class StandardPrimaryButton extends AppElevatedButton {
  const StandardPrimaryButton({
    Key? key,
    double? width,
    double height = 50,
    double chipsHeight = 30,
    double? borderRadius,
    dynamic text,
    ButtonSize buttonSize = ButtonSize.half,
    ButtonRound buttonRound = ButtonRound.halfRounded,
    bool disable = false,
    Widget? child,
    Color? backgroundColor,
    Color? foregroundColor,
    Color? disabledBackgroundColor,
    Color? disabledForegroundColor,
    Color? borderColor,
    VoidCallback? onPressed,
  }) : super(
            key: key,
            width: width,
            height: height,
            chipsHeight: chipsHeight,
            borderRadius: borderRadius,
            text: text,
            disabled: disable,
            onPressed: onPressed,
            buttonType: ButtonType.primary,
            buttonSize: buttonSize,
            buttonRound: buttonRound,
            child: child,
            backgroundColor: backgroundColor,
            foregroundColor: foregroundColor,
            disabledBackgroundColor: disabledBackgroundColor,
            disabledForegroundColor: disabledForegroundColor,
            borderColor: borderColor);
}

class StandardSecondaryButton extends AppElevatedButton {
  const StandardSecondaryButton({
    Key? key,
    double? width,
    double height = 50,
    double chipsHeight = 30,
    double? borderRadius,
    dynamic text,
    ButtonSize buttonSize = ButtonSize.half,
    ButtonRound buttonRound = ButtonRound.halfRounded,
    bool disable = false,
    Widget? child,
    Color? backgroundColor,
    Color? foregroundColor,
    Color? disabledBackgroundColor,
    Color? disabledForegroundColor,
    Color? borderColor,
    VoidCallback? onPressed,
  }) : super(
            key: key,
            width: width,
            height: height,
            chipsHeight: chipsHeight,
            borderRadius: borderRadius,
            text: text,
            disabled: disable,
            onPressed: onPressed,
            buttonType: ButtonType.secondary,
            buttonSize: buttonSize,
            buttonRound: buttonRound,
            child: child,
            backgroundColor: backgroundColor,
            foregroundColor: foregroundColor,
            disabledBackgroundColor: disabledBackgroundColor,
            disabledForegroundColor: disabledForegroundColor,
            borderColor: borderColor);
}

class TextPrimaryButton extends AppStaticButton {
  const TextPrimaryButton(
      {Key? key,
      dynamic text = "Button",
      Color? color,
      BorderRadius? borderRadius,
      Color? backgroundColor,
      Color? focusColor,
      Color? splashColor,
      Color? highlightColor,
      double elevation = 0,
      double? width,
      double? height,
      Widget? child,
      bool disabled = false,
      Color? disabledColor,
      bool autofocus = false,
      bool splashEnabled = false,
      bool highlightEnabled = true,
      TextDecoration? decoration,
      EdgeInsetsGeometry? padding,
      VoidCallback? onPressed,
      VoidCallback? onDoublePressed,
      VoidCallback? onLongPress,
      Function(TapDownDetails)? onTapDown,
      Function(TapUpDetails)? onTapUp,
      InteractiveInkFeatureFactory? splashFactory})
      : super(
          key: key,
          text: text,
          color: color,
          borderRadius: borderRadius,
          backgroundColor: backgroundColor,
          focusColor: focusColor,
          splashColor: splashColor,
          highlightColor: highlightColor,
          elevation: elevation,
          width: width,
          height: height,
          disabled: disabled,
          disabledColor: disabledColor,
          autofocus: autofocus,
          splashEnabled: splashEnabled,
          highlightEnabled: highlightEnabled,
          decoration: decoration,
          padding: padding,
          onPressed: onPressed,
          onDoublePressed: onDoublePressed,
          onLongPress: onLongPress,
          onTapDown: onTapDown,
          onTapUp: onTapUp,
          splashFactory: splashFactory,
          child: child,
        );
}
